{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nexport const useFormatDate = (begginningDate, finishingDate) => {\n  _s();\n\n  const [month, setMonth] = useState(\"\");\n  useEffect(() => {\n    const begginningMonth = new Date(begginningDate).toLocaleString(\"default\", {\n      month: \"short\"\n    });\n    const finishingMonth = new Date(finishingDate).toLocaleString(\"default\", {\n      month: \"short\"\n    });\n    const finishingDay = new Date(finishingDate).getDate();\n    const begginningDay = new Date(begginningDate).getDate();\n\n    if (begginningMonth === finishingMonth) {\n      console.log(\"test1\");\n      setMonth(begginningMonth);\n    } else {\n      console.log(begginningMonth.toUpperCase() + finishingMonth);\n      setMonth(begginningMonth + finishingMonth);\n    }\n  }, []);\n  return month;\n};\n\n_s(useFormatDate, \"sU4JVo7o8suwQq4/3hSoJqs2I2o=\");","map":{"version":3,"names":["useState","useEffect","useFormatDate","begginningDate","finishingDate","month","setMonth","begginningMonth","Date","toLocaleString","finishingMonth","finishingDay","getDate","begginningDay","console","log","toUpperCase"],"sources":["/Users/kevinrobert/Documents/Projects/react-airbnb/src/hooks/useFormatDate.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport const useFormatDate = (begginningDate, finishingDate) => {\n  const [month, setMonth] = useState<string>(\"\");\n\n  useEffect(() => {\n    const begginningMonth = new Date(begginningDate).toLocaleString(\"default\", {\n      month: \"short\",\n    });\n    const finishingMonth = new Date(finishingDate).toLocaleString(\"default\", {\n      month: \"short\",\n    });\n\n    const finishingDay = new Date(finishingDate).getDate();\n    const begginningDay = new Date(begginningDate).getDate();\n\n    if (begginningMonth === finishingMonth) {\n      console.log(\"test1\");\n      setMonth(begginningMonth);\n    } else {\n      console.log(begginningMonth.toUpperCase() + finishingMonth);\n      setMonth(begginningMonth + finishingMonth);\n    }\n  }, []);\n\n  return month;\n};\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,cAAD,EAAiBC,aAAjB,KAAmC;EAAA;;EAC9D,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAS,EAAT,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMM,eAAe,GAAG,IAAIC,IAAJ,CAASL,cAAT,EAAyBM,cAAzB,CAAwC,SAAxC,EAAmD;MACzEJ,KAAK,EAAE;IADkE,CAAnD,CAAxB;IAGA,MAAMK,cAAc,GAAG,IAAIF,IAAJ,CAASJ,aAAT,EAAwBK,cAAxB,CAAuC,SAAvC,EAAkD;MACvEJ,KAAK,EAAE;IADgE,CAAlD,CAAvB;IAIA,MAAMM,YAAY,GAAG,IAAIH,IAAJ,CAASJ,aAAT,EAAwBQ,OAAxB,EAArB;IACA,MAAMC,aAAa,GAAG,IAAIL,IAAJ,CAASL,cAAT,EAAyBS,OAAzB,EAAtB;;IAEA,IAAIL,eAAe,KAAKG,cAAxB,EAAwC;MACtCI,OAAO,CAACC,GAAR,CAAY,OAAZ;MACAT,QAAQ,CAACC,eAAD,CAAR;IACD,CAHD,MAGO;MACLO,OAAO,CAACC,GAAR,CAAYR,eAAe,CAACS,WAAhB,KAAgCN,cAA5C;MACAJ,QAAQ,CAACC,eAAe,GAAGG,cAAnB,CAAR;IACD;EACF,CAlBQ,EAkBN,EAlBM,CAAT;EAoBA,OAAOL,KAAP;AACD,CAxBM;;GAAMH,a"},"metadata":{},"sourceType":"module"}